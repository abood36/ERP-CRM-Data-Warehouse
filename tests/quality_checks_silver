-- ## CRM QUALITY CHECK ## --
----
-- TABLE: crm_cust_info --
----
-- STEP1: BRONZE LAYER --
----
-- CHEK FOR NULLS & DOUPLICATES IN PK --
SELECT cst_id, COUNT(*)
FROM bronze.crm_cust_info
GROUP BY cst_id
HAVING COUNT(*) > 1 OR cst_id IS NULL

-- CHECK UNWANTED SPACES --
SELECT cst_firstname
FROM bronze.crm_cust_info
WHERE cst_firstname != TRIM(cst_firstname)

-- DATA STANDARDIZATION --
SELECT DISTINCT cst_marital_status
FROM bronze.crm_cust_info

----
-- STEP2: SILVER LAYER --
----
-- CHEK FOR NULLS & DOUPLICATES IN PK --
SELECT cst_id, COUNT(*)
FROM silver.crm_cust_info
GROUP BY cst_id
HAVING COUNT(*) > 1 OR cst_id IS NULL

-- CHECK UNWANTED SPACES --
SELECT cst_firstname
FROM silver.crm_cust_info
WHERE cst_firstname != TRIM(cst_firstname)

-- DATA STANDARDIZATION --
SELECT DISTINCT cst_marital_status
FROM silver.crm_cust_info


--------------------------------------------------------------------------------


-- TABLE: crm_prd_info --
----
-- STEP1: BRONZE LAYER --
----
-- CHEK FOR NULLS & DOUPLICATES IN PK --
SELECT prd_id, COUNT(*)
FROM bronze.crm_prd_info
GROUP BY prd_id
HAVING COUNT(*) > 1 OR prd_id IS NULL

-- CHECK UNWANTED SPACES --
SELECT prd_nm
FROM bronze.crm_prd_info
WHERE prd_nm != TRIM(prd_nm)

-- CHECK FOR NULLS OR NEGATIVE NUMBERS --
SELECT prd_cost
FROM bronze.crm_prd_info
WHERE prd_cost < 0 OR prd_cost IS NULL

-- DATA STANDARDIZATION --
SELECT DISTINCT prd_line
FROM bronze.crm_prd_info

-- CHECK FOR INVALID DATE ORDERS --
SELECT *
FROM bronze.crm_prd_info
WHERE prd_start_dt > prd_end_dt

----
-- STEP2: SILVER LAYER --
----
-- CHEK FOR NULLS & DOUPLICATES IN PK --
SELECT prd_id, COUNT(*)
FROM silver.crm_prd_info
GROUP BY prd_id
HAVING COUNT(*) > 1 OR prd_id IS NULL

-- CHECK UNWANTED SPACES --
SELECT prd_nm
FROM silver.crm_prd_info
WHERE prd_nm != TRIM(prd_nm)

-- CHECK FOR NULLS OR NEGATIVE NUMBERS --
SELECT prd_cost
FROM silver.crm_prd_info
WHERE prd_cost < 0 OR prd_cost IS NULL

-- DATA STANDARDIZATION --
SELECT DISTINCT prd_line
FROM silver.crm_prd_info

-- CHECK FOR INVALID DATE ORDERS --
SELECT *
FROM silver.crm_prd_info
WHERE prd_start_dt > prd_end_dt


--------------------------------------------------------------------------------


-- TABLE: crm_sales_details--
----
-- STEP1: BRONZE LAYER --
----
-- CHECK FOR INVALID DATES --
SELECT
NULLIF(sls_order_dt, 0) sls_order_dt
FROM bronze.crm_sales_details
WHERE sls_order_dt <= 0
OR LEN(sls_order_dt) != 8
OR sls_order_dt > 20500101
OR sls_order_dt < 19000101

-- CHECK FOR INVALID DATE ORDERS --
SELECT *
FROM bronze.crm_sales_details
WHERE sls_order_dt > sls_ship_dt
OR sls_order_dt > sls_due_dt

-- CHECK CONSISTENCY BETWEEN (SALES, QUANTITY, PRICE) --
SELECT DISTINCT
	sls_sales,
	sls_quantity,
	sls_price
FROM bronze.crm_sales_details
WHERE sls_sales != sls_quantity * sls_price
OR sls_sales IS NULL OR sls_quantity IS NULL OR sls_price IS NULL
OR sls_sales <= 0 OR sls_quantity <= 0 OR sls_price <= 0
ORDER BY sls_sales, sls_quantity, sls_price


----
-- STEP2: SILVERLAYER --
----
-- CHECK FOR INVALID DATES --
SELECT
NULLIF(sls_order_dt, 0) sls_order_dt
FROM silver.crm_sales_details
WHERE sls_order_dt <= 0
OR LEN(sls_order_dt) != 8
OR sls_order_dt > 20500101
OR sls_order_dt < 19000101

-- CHECK FOR INVALID DATE ORDERS --
SELECT *
FROM silver.crm_sales_details
WHERE sls_order_dt > sls_ship_dt
OR sls_order_dt > sls_due_dt

-- CHECK CONSISTENCY BETWEEN (SALES, QUANTITY, PRICE) --
SELECT DISTINCT
	sls_sales,
	sls_quantity,
	sls_price
FROM silver.crm_sales_details
WHERE sls_sales != sls_quantity * sls_price
OR sls_sales IS NULL OR sls_quantity IS NULL OR sls_price IS NULL
OR sls_sales <= 0 OR sls_quantity <= 0 OR sls_price <= 0
ORDER BY sls_sales, sls_quantity, sls_price


--------------------------------------------------------------------------------


-- ## ERP QUALITY CHECK ## --
----
-- TABLE: erp_cust_az12 --
----
-- IDENTIFY OUTLIERS DATES --
SELECT DISTINCT bdate
FROM silver.erp_cust_az12
WHERE bdate > GETDATE()

-- DATA STANDARDIZATION --
SELECT DISTINCT gen
FROM silver.erp_cust_az12


--------------------------------------------------------------------------------

----
-- TABLE: erp_loc_a101 --
----
-- DATA STANDARDIZATION --
SELECT DISTINCT cntry
FROM silver.erp_loc_a101

-- CHECKING EMPTY SPACING --
SELECT cntry
FROM silver.erp_loc_a101
where cntry != TRIM(cntry)
OR cntry IS NULL


--------------------------------------------------------------------------------

----
-- TABLE: erp_px_cat_g1v2 --
----
-- DATA STANDARDIZATION --
SELECT DISTINCT cat
FROM bronze.erp_px_cat_g1v2

-- CHECKING EMPTY SPACING --
SELECT *
FROM bronze.erp_px_cat_g1v2
WHERE cat != TRIM(cat)

